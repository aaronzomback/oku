{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { syllableReq } from \"./validations\";\nimport { syllable } from 'syllable';\nexport var useForm = function useForm(callback, _ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var onChange = function onChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    switch (name) {\n      case 'line1':\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          line1: value\n        }));\n        break;\n\n      case 'line2':\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          line2: value\n        }));\n        break;\n\n      case 'line3':\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          line3: value\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    console.log('target: ', event.target);\n    console.log('name: ', name);\n    console.log('value: ', value);\n    console.log('syllable count: ', syllable(value));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n\n    if (syllable(value) === 5) {\n      callback();\n    } else {\n      setError(true);\n      alert('You must fit syllable reqs! ðŸ‘€');\n    }\n  };\n\n  return {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    values: values\n  };\n};","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/util/hooks.js"],"names":["useState","syllableReq","syllable","useForm","callback","values","setValues","error","setError","onChange","event","target","name","value","line1","line2","line3","console","log","onSubmit","preventDefault","alert"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT;AACA,SAASC,QAAT,QAAyB,UAAzB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,QAAkB;AAAA;;AACvC,kBAA4BJ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0BN,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd;;AAEA,YAAQD,IAAR;AACE,WAAK,OAAL;AAEEN,QAAAA,SAAS,iCAAMD,MAAN;AAAcS,UAAAA,KAAK,EAAED;AAArB,WAAT;AACA;;AACF,WAAK,OAAL;AAEJP,QAAAA,SAAS,iCAAMD,MAAN;AAAcU,UAAAA,KAAK,EAAEF;AAArB,WAAT;AACM;;AACF,WAAK,OAAL;AAEEP,QAAAA,SAAS,iCAAMD,MAAN;AAAcW,UAAAA,KAAK,EAAEH;AAArB,WAAT;AACA;;AACF;AACE;AAdJ;;AAgBAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,KAAK,CAACC,MAA9B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,KAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgChB,QAAQ,CAACW,KAAD,CAAxC;AACD,GAvBD;;AAyBA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACT,KAAD,EAAW;AAC1BA,IAAAA,KAAK,CAACU,cAAN;AACA,yBAAwBV,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,kBAAQA,IAAR;AAAA,QAAcC,KAAd,kBAAcA,KAAd;;AAGA,QAAIX,QAAQ,CAACW,KAAD,CAAR,KAAoB,CAAxB,EAA2B;AACzBT,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAa,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,GAXD;;AAaA,SAAO;AACLZ,IAAAA,QAAQ,EAARA,QADK;AAELU,IAAAA,QAAQ,EAARA,QAFK;AAGLd,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD,CA/CM","sourcesContent":["import { useState } from 'react';\nimport { syllableReq } from './validations';\nimport { syllable } from 'syllable';\n\nexport const useForm = (callback, {}) => {\n  const [values, setValues] = useState({});\n  const [error, setError] = useState(false);\n  \n  const onChange = (event) => {\n    const { name, value } = event.target\n    \n    switch (name) {\n      case 'line1':\n        // write validation logic here\n        setValues({ ...values, line1: value });                 \n        break;\n      case 'line2':\n        // write validation logic here               \n  setValues({ ...values, line2: value });\n        break;\n      case 'line3':\n        // write validation logic here\n        setValues({ ...values, line3: value });       \n        break;\n      default:\n        break;\n    }\n    console.log('target: ', event.target);\n    console.log('name: ', name);\n    console.log('value: ', value);\n    console.log('syllable count: ', syllable(value));\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target\n\n    // write syllable logic here, will eventually be 5/7/5 syllables\n    if (syllable(value) === 5) {\n      callback();\n    } else {\n      setError(true);\n      alert('You must fit syllable reqs! ðŸ‘€')\n    }\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};"]},"metadata":{},"sourceType":"module"}