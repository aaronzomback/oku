{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronzomback/Sites/oku/client-react-native/screens/Auth.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY, FETCH_USER_BY_EMAIL } from \"../graphql/Queries\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from 'react-native-elements';\n\nfunction Auth(_ref) {\n  var isAuthenticated = _ref.isAuthenticated,\n      setIsAuthenticated = _ref.setIsAuthenticated,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useLazyQuery = useLazyQuery(FETCH_USER_QUERY),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getUser = _useLazyQuery2[0],\n      data = _useLazyQuery2[1].data;\n\n  console.log(data.users.users);\n\n  var submitHandler = function submitHandler(e) {\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(email == '' && password == '')) {\n              _context.next = 7;\n              break;\n            }\n\n            setIsAuthenticated(false);\n            setError(true);\n            alert('ðŸ‘€ All form inputs must be completed to join!');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(getUser({\n              variables: {\n                email: email,\n                password: password\n              }\n            }));\n\n          case 9:\n            if (data) {\n              setIsAuthenticated(true);\n              navigation.navigate('Landing');\n              setEmail('');\n              setPassword('');\n            } else {\n              setIsAuthenticated(false);\n              setError(true);\n              alert('ðŸ‘€ Email/password are invalid! Try again!');\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeHandlerEmail = function onChangeHandlerEmail(e) {\n    setEmail(e.target.value);\n    console.log('email value: ', email);\n    error && setError(false);\n  };\n\n  var onChangeHandlerPassword = function onChangeHandlerPassword(e) {\n    setPassword(e.target.value);\n    console.log('password value: ', password);\n    error && setError(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-flex\",\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, React.createElement(\"label\", {\n    style: {\n      fontSize: 16,\n      marginBottom: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Email\"), React.createElement(\"input\", {\n    placeholder: \"Enter email...\",\n    onChange: onChangeHandlerEmail,\n    name: \"email\",\n    value: email,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), React.createElement(\"label\", {\n    style: {\n      fontSize: 16,\n      marginBottom: 4,\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Password\"), React.createElement(\"input\", {\n    placeholder: \"Enter password...\",\n    onChange: onChangeHandlerPassword,\n    name: \"password\",\n    value: password,\n    typer: \"password\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      marginTop: 8,\n      backgroundColor: '#60BADA'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Sign in\"))))));\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/screens/Auth.js"],"names":["React","useState","useQuery","useLazyQuery","FETCH_USER_QUERY","FETCH_USER_BY_EMAIL","Stylesheet","Input","Auth","isAuthenticated","setIsAuthenticated","navigation","email","setEmail","password","setPassword","error","setError","getUser","data","console","log","users","submitHandler","e","preventDefault","alert","variables","navigate","onChangeHandlerEmail","target","value","onChangeHandlerPassword","flex","justifyContent","alignItems","flexDirection","alignContent","fontSize","marginBottom","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport { useState } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY, FETCH_USER_BY_EMAIL } from '../graphql/Queries';\nimport { View, Stylesheet, Button, Text } from 'react-native';\nimport { Input } from 'react-native-elements';\n\n\n\nfunction Auth ({isAuthenticated, setIsAuthenticated, navigation}) {\n  \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState(false);\n\n  const [ getUser, {data} ] = useLazyQuery(FETCH_USER_QUERY);\n  console.log(data.users.users);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (email == '' && password == '') {\n      setIsAuthenticated(false);\n      setError(true);\n      alert('ðŸ‘€ All form inputs must be completed to join!');\n    } else {\n      await getUser({\n        variables: {\n          email,\n          password\n        }\n      });\n      if (data) {\n        setIsAuthenticated(true);\n        navigation.navigate('Landing');\n        setEmail('');\n        setPassword('');\n      } else {\n        setIsAuthenticated(false);\n        setError(true);\n        alert('ðŸ‘€ Email/password are invalid! Try again!');\n      }\n    } \n  }\n\n  \n\n\n  const onChangeHandlerEmail = (e) => {\n    setEmail(e.target.value);\n    console.log('email value: ', email)\n    error && setError(false);\n  }\n\n  const onChangeHandlerPassword = (e) => {\n    setPassword(e.target.value);\n    console.log('password value: ', password)\n    error && setError(false);\n  }\n\n\n  return (\n        <div className=\"form-flex\" style={{flex: 1, justifyContent: 'center', alignItems: 'center', flexDirection: 'row'}}>\n          <div>\n            <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n            <form onSubmit={submitHandler}>\n              <View style={{flex: 1, alignContent: 'center', justifyContent: 'center'}}>\n              <label style={{fontSize: 16, marginBottom: 4 }}>Email</label>\n              <input placeholder=\"Enter email...\"\n                     onChange={onChangeHandlerEmail}\n                     name=\"email\"\n                     value={email}\n                     noValidate\n                     \n              ></input>\n              <label style={{fontSize: 16, marginBottom: 4, marginTop: 8 }}>Password</label>\n              <input placeholder=\"Enter password...\"\n                     onChange={onChangeHandlerPassword}\n                     name=\"password\"\n                     value={password}\n                     typer=\"password\"\n                     noValidate\n\n              ></input>\n              <button type=\"submit\" style={{marginTop: 8, backgroundColor: '#60BADA'}}>\n                Sign in\n              </button>\n              </View>\n            </form>\n            </View>\n          </div>\n        </div>\n  )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}