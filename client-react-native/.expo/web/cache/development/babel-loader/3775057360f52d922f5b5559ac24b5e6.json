{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronzomback/Sites/oku/client-react-native/containers/LogInForm.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY } from \"../graphql/Queries\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from 'react-native-elements';\nexport default function LogInForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useLazyQuery = useLazyQuery(FETCH_USER_QUERY),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n      getUser = _useLazyQuery2[0];\n\n  var submitHandler = function submitHandler(e) {\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(email != '' && password != '')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getUser({\n              variables: {\n                email: email,\n                password: password\n              }\n            }));\n\n          case 4:\n            setEmail('');\n            setPassword('');\n            _context.next = 10;\n            break;\n\n          case 8:\n            setError(true);\n            alert('ðŸ‘€ you must enter a valid email and password!');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeHandlerEmail = function onChangeHandlerEmail(e) {\n    setEmail(e.target.value);\n    console.log('email value: ', email);\n    error && setError(false);\n  };\n\n  var onChangeHandlerPassword = function onChangeHandlerPassword(e) {\n    setPassword(e.target.value);\n    console.log('password value: ', password);\n    error && setError(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  }, \"Email\")), React.createElement(\"input\", {\n    placeholder: \"Enter email...\",\n    onChange: onChangeHandlerEmail,\n    name: \"email\",\n    value: email,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, \"Password\")), React.createElement(\"input\", {\n    placeholder: \"Enter password...\",\n    onChange: onChangeHandlerPassword,\n    name: \"password\",\n    value: password,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Sign in\")))));\n}","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/containers/LogInForm.jsx"],"names":["React","useState","useQuery","useLazyQuery","FETCH_USER_QUERY","Stylesheet","Input","LogInForm","email","setEmail","password","setPassword","error","setError","getUser","submitHandler","e","preventDefault","variables","alert","onChangeHandlerEmail","target","value","console","log","onChangeHandlerPassword"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { useState } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY } from '../graphql/Queries';\nimport { View, Stylesheet, Button, Text } from 'react-native';\nimport { Input } from 'react-native-elements';\n\n\n\nexport default function LogInForm () {\n  \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState(false);\n\n  const [ getUser ] = useLazyQuery(FETCH_USER_QUERY);\n\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (email != '' && password != '') {\n      await getUser({\n        variables: {\n          email,\n          password\n        }\n      });\n      setEmail('');\n      setPassword('');\n    } else {\n      setError(true);\n      alert('ðŸ‘€ you must enter a valid email and password!')\n    }\n  }\n\n\n  const onChangeHandlerEmail = (e) => {\n    setEmail(e.target.value);\n    console.log('email value: ', email)\n    error && setError(false);\n  }\n\n  const onChangeHandlerPassword = (e) => {\n    setPassword(e.target.value);\n    console.log('password value: ', password)\n    error && setError(false);\n  }\n\n\n  return (\n        <div className=\"form-flex\">\n          <div>\n\n            <form onSubmit={submitHandler}>\n              <label><Text>Email</Text></label>\n              <input placeholder=\"Enter email...\"\n                     onChange={onChangeHandlerEmail}\n                     name=\"email\"\n                     value={email}\n                     noValidate\n              ></input>\n              <label><Text>Password</Text></label>\n              <input placeholder=\"Enter password...\"\n                     onChange={onChangeHandlerPassword}\n                     name=\"password\"\n                     value={password}\n                     noValidate\n\n              ></input>\n              <button type=\"submit\">\n                <Text>Sign in</Text>\n              </button>\n            </form>\n          </div>\n        </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}