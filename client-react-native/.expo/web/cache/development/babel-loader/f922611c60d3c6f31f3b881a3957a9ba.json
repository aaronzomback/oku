{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronzomback/Sites/oku/client-react-native/screens/FormModal.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY, FETCH_USER_BY_EMAIL } from \"../graphql/Queries\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Stylesheet } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input } from 'react-native-elements';\n\nfunction FormModal(_ref) {\n  var isAuthenticated = _ref.isAuthenticated,\n      setIsAuthenticated = _ref.setIsAuthenticated,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useLazyQuery = useLazyQuery(FETCH_USER_QUERY),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getUser = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      data = _useLazyQuery2$.data,\n      loading = _useLazyQuery2$.loading,\n      called = _useLazyQuery2$.called;\n\n  data ? console.log('is it this?: ', data) : null;\n  if (loading) return React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }\n  }, \"Loading ...\");\n\n  var submitHandler = function submitHandler(e) {\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (!(email == '' || password == '')) {\n              _context.next = 7;\n              break;\n            }\n\n            setIsAuthenticated(false);\n            setError(true);\n            alert('ðŸ‘€ All form inputs must be completed to join!');\n            _context.next = 14;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(getUser({\n              variables: {\n                email: email,\n                password: password\n              }\n            }));\n\n          case 9:\n            setIsAuthenticated(true);\n            setEmail('');\n            setPassword('');\n            navigation.navigate('Landing');\n            console.log('line 45: ', data);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeHandlerEmail = function onChangeHandlerEmail(e) {\n    setEmail(e.target.value);\n    console.log('email value: ', email);\n    error && setError(false);\n  };\n\n  var onChangeHandlerPassword = function onChangeHandlerPassword(e) {\n    setPassword(e.target.value);\n    console.log('password value: ', password);\n    error && setError(false);\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 32,\n      color: '#20994C',\n      fontSize: '8rem',\n      textAlign: 'center',\n      letterSpacing: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"OKU\"), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      marginBottom: 12,\n      color: '#20994C'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    placeholder: \"Enter email...\",\n    onChange: onChangeHandlerEmail,\n    name: \"email\",\n    value: email,\n    noValidate: true,\n    style: {\n      marginBottom: 16,\n      borderColor: '#20994C',\n      borderWidth: 2.2,\n      padding: '0.6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      marginBottom: 12,\n      marginTop: 8,\n      color: '#20994C'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    placeholder: \"Enter password...\",\n    onChange: onChangeHandlerPassword,\n    name: \"password\",\n    value: password,\n    secureTextEntry: true,\n    noValidate: true,\n    style: {\n      borderColor: '#20994C',\n      borderWidth: 2.2,\n      padding: '0.6em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: submitHandler,\n    style: {\n      width: '20em',\n      marginTop: 8,\n      color: '#F5F2EB',\n      backgroundColor: '#20994C',\n      borderRadius: '4em',\n      padding: \"0.6em\",\n      textAlign: \"center\",\n      marginTop: '2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: \"16px\",\n      color: '#F5F2EB'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Sign in\"))));\n}\n\nexport default FormModal;","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/screens/FormModal.js"],"names":["React","useState","useEffect","useQuery","useLazyQuery","FETCH_USER_QUERY","FETCH_USER_BY_EMAIL","Stylesheet","Input","FormModal","isAuthenticated","setIsAuthenticated","navigation","email","setEmail","password","setPassword","error","setError","getUser","data","loading","called","console","log","submitHandler","e","preventDefault","alert","variables","navigate","onChangeHandlerEmail","target","value","onChangeHandlerPassword","marginLeft","marginRight","marginTop","marginBottom","color","fontSize","textAlign","letterSpacing","borderColor","borderWidth","padding","width","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport { useState, useEffect } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { FETCH_USER_QUERY, FETCH_USER_BY_EMAIL } from '../graphql/Queries';\nimport { View, Stylesheet, Button, Text, TextInput, TouchableOpacity } from 'react-native';\nimport { Input } from 'react-native-elements';\n\n\n\nfunction FormModal ({isAuthenticated, setIsAuthenticated, navigation}) {\n  \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [error, setError] = useState(false);\n\n\n  const [ getUser, { data, loading, called } ] = useLazyQuery(FETCH_USER_QUERY);\n  data ? console.log('is it this?: ', data) : null;\n\n  if (loading) return <p>Loading ...</p>;\n\n  // if (data) {\n  //   if (data.length) {\n  //     console.log('data call: ', data);\n  //     setIsAuthenticated(true);\n  //     console.log('is auth?: ', isAuthenticated)\n  //     navigation.navigate('Landing');\n  //   }\n  //   else {\n  //     setIsAuthenticated(false);\n  //     setError(true);\n  //   }\n  // }\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (email == '' || password == '') {\n      setIsAuthenticated(false);\n      setError(true);\n      alert('ðŸ‘€ All form inputs must be completed to join!');\n    } else {\n      await getUser({\n        variables: {\n          email,\n          password\n        },\n      });\n      setIsAuthenticated(true);\n      setEmail('');\n      setPassword('');\n      navigation.navigate('Landing');\n      console.log('line 45: ', data);\n    } \n  }\n\n  \n\n\n  const onChangeHandlerEmail = (e) => {\n    setEmail(e.target.value);\n    console.log('email value: ', email)\n    error && setError(false);\n  }\n\n  const onChangeHandlerPassword = (e) => {\n    setPassword(e.target.value);\n    console.log('password value: ', password)\n    error && setError(false);\n  }\n\n  return (\n       <View style={{marginLeft: 'auto', marginRight: 'auto', marginTop: '4em' }}>\n          <View>\n            <Text style={{marginBottom: 32, color: '#20994C', fontSize: '8rem', textAlign: 'center', letterSpacing: 24 }}>OKU</Text>\n          <Text style={{fontSize: 16, marginBottom: 12, color: '#20994C' }}>Email</Text>\n          <TextInput placeholder=\"Enter email...\"\n                 onChange={onChangeHandlerEmail}\n                 name=\"email\"\n                 value={email}\n                 noValidate\n                 style={{marginBottom: 16, borderColor: '#20994C', borderWidth: 2.2, padding: '0.6em' }}\n                 \n          ></TextInput>\n          <Text style={{fontSize: 16, marginBottom: 12, marginTop: 8, color: '#20994C' }}>Password</Text>\n          <TextInput placeholder=\"Enter password...\"\n                 onChange={onChangeHandlerPassword}\n                 name=\"password\"\n                 value={password}\n                 secureTextEntry={true}\n                 noValidate\n                 style={{borderColor: '#20994C', borderWidth: 2.2, padding: '0.6em' }}\n\n          ></TextInput>\n          <TouchableOpacity onPress={submitHandler} style={{ width: '20em', marginTop: 8, color: '#F5F2EB', backgroundColor: '#20994C', borderRadius: '4em', padding: \"0.6em\", textAlign: \"center\", marginTop: '2em'}}>\n            <Text style={{fontSize: \"16px\", color: '#F5F2EB' }}>Sign in</Text>\n          </TouchableOpacity>\n          </View>\n      </View>\n)\n}\n\n\n\nexport default FormModal;\n"]},"metadata":{},"sourceType":"module"}