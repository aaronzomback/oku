{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport { useState } from 'react';\nimport { syllableReq } from \"./validations\";\nimport { syllable } from 'syllable';\nexport var useForm = function useForm(callback, _ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var onChange = function onChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log('target: ', event.target);\n    console.log('name: ', name);\n    console.log('value: ', value);\n    console.log('syllable count: ', syllable(value));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n\n    if (syllable(value) === 5) {\n      callback();\n    } else {\n      setError(true);\n      alert('You must fit syllable reqs! ðŸ‘€');\n    }\n  };\n\n  return {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    values: values\n  };\n};","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/util/hooks.js"],"names":["useState","syllableReq","syllable","useForm","callback","values","setValues","error","setError","onChange","event","target","name","value","console","log","onSubmit","preventDefault","alert"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT;AACA,SAASC,QAAT,QAAyB,UAAzB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,QAAkB;AAAA;;AACvC,kBAA4BJ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0BN,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,wBAAwBA,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,iBAAQA,IAAR;AAAA,QAAcC,KAAd,iBAAcA,KAAd;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,KAAK,CAACC,MAA9B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCb,QAAQ,CAACW,KAAD,CAAxC;AACD,GAPD;;AASA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACN,KAAD,EAAW;AAC1BA,IAAAA,KAAK,CAACO,cAAN;AACA,yBAAwBP,KAAK,CAACC,MAA9B;AAAA,QAAQC,IAAR,kBAAQA,IAAR;AAAA,QAAcC,KAAd,kBAAcA,KAAd;;AAGA,QAAIX,QAAQ,CAACW,KAAD,CAAR,KAAoB,CAAxB,EAA2B;AACzBT,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAU,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,GAXD;;AAaA,SAAO;AACLT,IAAAA,QAAQ,EAARA,QADK;AAELO,IAAAA,QAAQ,EAARA,QAFK;AAGLX,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD,CA/BM","sourcesContent":["import { useState } from 'react';\nimport { syllableReq } from './validations';\nimport { syllable } from 'syllable';\n\nexport const useForm = (callback, {}) => {\n  const [values, setValues] = useState({});\n  const [error, setError] = useState(false);\n  \n  const onChange = (event) => {\n    const { name, value } = event.target\n    \n    console.log('target: ', event.target);\n    console.log('name: ', name);\n    console.log('value: ', value);\n    console.log('syllable count: ', syllable(value));\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target\n\n    // write syllable logic here, will eventually be 5/7/5 syllables\n    if (syllable(value) === 5) {\n      callback();\n    } else {\n      setError(true);\n      alert('You must fit syllable reqs! ðŸ‘€')\n    }\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};"]},"metadata":{},"sourceType":"module"}