{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aaronzomback/Sites/oku/client-react-native/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nimport Auth from \"./screens/Auth\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LandingScreen from \"./screens/LandingScreen\";\nimport SignUp from \"./screens/SignUp\";\nimport CreateScreen from \"./screens/CreateScreen\";\nimport FeedScreen from \"./screens/FeedScreen\";\nimport WordOfDay from \"./screens/WordOfDayScreen\";\nimport MyHaikus from \"./screens/MyHaikus\";\nimport { screenOptions } from \"./assets/styles\";\nimport { fetchRequest } from \"./services/ApiClient\";\nvar RootStack = createStackNavigator();\nvar MainStack = createStackNavigator();\n\nvar MainStackScreen = function MainStackScreen() {\n  return React.createElement(MainStack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(MainStack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(MainStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'OKU'\n    },\n    isAuthenticated: isAuthenticated,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"Create\",\n    component: CreateScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"Feed\",\n    component: FeedScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"Landing\",\n    component: LandingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"WordOfDay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"MyHaikus\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"Auth\",\n    component: Auth,\n    setIsAuthenticated: setIsAuthenticated,\n    isAuthenticated: isAuthenticated,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar errorLink = onError(function (_ref) {\n  var graphQLErrors = _ref.graphQLErrors,\n      networkError = _ref.networkError;\n\n  if (graphQLErrors) {\n    console.log('graphQLErrors', graphQLErrors);\n  }\n\n  if (networkError) {\n    console.log('networkError', networkError);\n  }\n});\nvar httpLink = createHttpLink({\n  uri: 'http://localhost:4001/graphql'\n});\nvar link = ApolloLink.from([errorLink, httpLink]);\nvar client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      words = _useState2[0],\n      setWord = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var words;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchRequest());\n\n            case 2:\n              words = _context.sent;\n              console.log(words.definitions[1].text);\n              setWord(words);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStack.Navigator, {\n    mode: modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(RootStack.Screen, {\n    name: \"Main\",\n    component: MainStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F2F4F7',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#60BADA'\n  }\n});","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/App.js"],"names":["StatusBar","React","useState","useEffect","NavigationContainer","createStackNavigator","ApolloClient","InMemoryCache","ApolloProvider","gql","createHttpLink","onError","ApolloLink","Auth","HomeScreen","LandingScreen","SignUp","CreateScreen","FeedScreen","WordOfDay","MyHaikus","screenOptions","fetchRequest","RootStack","MainStack","MainStackScreen","title","isAuthenticated","setIsAuthenticated","errorLink","graphQLErrors","networkError","console","log","httpLink","uri","link","from","client","cache","App","words","setWord","definitions","text","modal","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useState, useEffect} from 'react';\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StyleSheet, Text, View, Modal } from 'react-native';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\n\nimport Auth from './screens/Auth';\nimport HomeScreen from './screens/HomeScreen';\nimport LandingScreen from './screens/LandingScreen';\nimport SignUp from './screens/SignUp'\nimport CreateScreen from './screens/CreateScreen'\nimport FeedScreen from './screens/FeedScreen';\nimport WordOfDay from './screens/WordOfDayScreen';\nimport MyHaikus from './screens/MyHaikus';\nimport { screenOptions } from './assets/styles'\nimport { fetchRequest } from './services/ApiClient';\n\n\n\n\n\nconst RootStack = createStackNavigator();\nconst MainStack = createStackNavigator();\n\nconst MainStackScreen = () => {\n  return (\n    <MainStack.Navigator>\n        <MainStack.Navigator initialRouteName=\"Home\">\n          <MainStack.Screen\n            name=\"Home\"\n            component={HomeScreen}\n            options={{ title: 'OKU' }}\n            isAuthenticated={isAuthenticated}\n            \n          />\n          <MainStack.Screen \n            name=\"SignUp\"\n            component={SignUp}\n\n          />\n          <MainStack.Screen\n            name=\"Create\"\n            component={CreateScreen}\n          />\n          <MainStack.Screen\n            name=\"Feed\"\n            component={FeedScreen} \n          />\n          <MainStack.Screen\n            name=\"Landing\"\n            component={LandingScreen} \n          />\n          <MainStack.Screen \n            name=\"WordOfDay\"\n          />\n          <MainStack.Screen \n            name=\"MyHaikus\"\n          />\n          <MainStack.Screen name=\"Auth\" component={Auth} setIsAuthenticated={setIsAuthenticated} isAuthenticated={isAuthenticated}\n\n          />\n          </MainStack.Navigator>\n    </MainStack.Navigator>\n  );\n};\n\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log('graphQLErrors', graphQLErrors);\n  }\n  if (networkError) {\n    console.log('networkError', networkError);\n  }\n});\n\n// our GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4001/graphql'\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\n// Pass our GraphQL endpoint & error links to ApolloClient API\nconst client = new ApolloClient({ \n  link,\n  cache: new InMemoryCache() \n});\n\n\nexport default function App() {\n\n  const [ words, setWord ] = useState([]);\n  const [ isAuthenticated, setIsAuthenticated ] = useState(false);\n\n  useEffect(() => {\n      (async () => {\n      const words = await fetchRequest()\n      console.log(words.definitions[1].text);\n      setWord(words) ;\n    })()\n  }, [])\n\n  return (\n    <ApolloProvider client={client}>\n      <NavigationContainer>\n        <RootStack.Navigator mode={modal}>\n          <RootStack.Screen\n            name=\"Main\"\n            component={MainStackScreen}\n\n          />\n        </RootStack.Navigator>\n        <StatusBar style=\"light\" />\n      </NavigationContainer>\n    </ApolloProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F2F4F7',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#60BADA'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}