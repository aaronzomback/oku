{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronzomback/Sites/oku/client-react-native/containers/SignUpForm.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { CREATE_USER_MUTATION } from \"../graphql/Mutations\";\nimport { addListener } from 'nodemon';\nimport { set } from 'react-native-reanimated';\nexport default function SignUpForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _useMutation = useMutation(CREATE_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createUser = _useMutation2[0];\n\n  var submitHandler = function submitHandler() {\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name != '' && username != '' && email != '' && password != '')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUser({\n              variables: {\n                name: name,\n                username: username,\n                email: email,\n                password: password\n              }\n            }));\n\n          case 3:\n            setName('');\n            setUsername('');\n            setEmail('');\n            setPassword('');\n            _context.next = 11;\n            break;\n\n          case 9:\n            setError(true);\n            alert('ðŸ‘€ All form inputs must be completed to join!');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Full name\"), React.createElement(\"input\", {\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Username\"), React.createElement(\"input\", {\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Email\"), React.createElement(\"input\", {\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Password\"), React.createElement(\"input\", {\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Sign up\"))));\n}","map":{"version":3,"sources":["/Users/aaronzomback/Sites/oku/client-react-native/containers/SignUpForm.jsx"],"names":["React","useState","useMutation","CREATE_USER_MUTATION","addListener","set","SignUpForm","name","setName","username","setUsername","email","setEmail","password","setPassword","error","setError","createUser","submitHandler","variables","alert","flex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;;;;;AAEA,SAASC,oBAAT;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,GAAT,QAAoB,yBAApB;AAGA,eAAe,SAASC,UAAT,GAAuB;AAGlC,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAA0Bb,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AAEA,qBAAqBd,WAAW,CAACC,oBAAD,CAAhC;AAAA;AAAA,MAAOc,UAAP;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChBX,IAAI,IAAI,EAAR,IAAcE,QAAQ,IAAI,EAA1B,IAAgCE,KAAK,IAAI,EAAzC,IAA+CE,QAAQ,IAAI,EAD3C;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEZI,UAAU,CAAC;AACfE,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,IAAI,EAAJA,IADS;AAETE,gBAAAA,QAAQ,EAARA,QAFS;AAGTE,gBAAAA,KAAK,EAALA,KAHS;AAITE,gBAAAA,QAAQ,EAARA;AAJS;AADI,aAAD,CAFE;;AAAA;AAUlBL,YAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,YAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,YAAAA,WAAW,CAAC,EAAD,CAAX;AAbkB;AAAA;;AAAA;AAelBE,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,YAAAA,KAAK,CAAC,+CAAD,CAAL;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAoBF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAIA;AAAO,IAAA,KAAK,EAAEd,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,EAUA;AAAO,IAAA,KAAK,EAAEE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbA,EAgBA;AAAO,IAAA,KAAK,EAAEE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBA,EAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBA,EAsBA;AAAO,IAAA,KAAK,EAAEE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBA,EAyBA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBA,CADF,CADA,CADF;AAmCD","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { View, Text, StyleSheet, TextInput, Keyboard, TouchableOpacity } from 'react-native';\nimport { CREATE_USER_MUTATION } from '../graphql/Mutations';\nimport { addListener } from 'nodemon';\nimport { set } from 'react-native-reanimated';\n\n\nexport default function SignUpForm () {\n\n    // initialize initial empty form inputs\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [error, setError] = useState(false);\n\n    const [createUser] = useMutation(CREATE_USER_MUTATION);\n\n    const submitHandler = async () => {\n      if (name != '' && username != '' && email != '' && password != '') {\n        await createUser({\n          variables: {\n            name,\n            username,\n            email,\n            password\n          }\n        });\n        setName('');\n        setUsername('');\n        setEmail('');\n        setPassword('');\n      } else {\n        setError(true);\n        alert('ðŸ‘€ All form inputs must be completed to join!');\n      }\n    }\n\n  return (\n    <div>\n    <form>\n      <View style={{flex: 1}}>\n      <label>\n        Full name\n      </label>\n      <input value={name}>\n\n      </input>\n      <label>\n        Username\n      </label>\n      <input value={username}>\n\n      </input>\n      <label>\n        Email\n      </label>\n      <input value={email}>\n      \n      </input>\n      <label>\n        Password\n      </label>\n      <input value={password}>\n      \n      </input>\n      <button type=\"submit\">\n      Sign up\n      </button>\n      </View>\n    </form>\n  </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}